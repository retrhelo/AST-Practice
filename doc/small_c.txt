# this is a small C-language-based BNF format
# based on simple_c.txt

<preprocessor>
<comment>

<programme> ::= [{ <var-def> | <func-def> 
				<struct-union-def> | <enum-def> }]

<var-def> ::= [<storage-type>] <type> [{"*"}] <identifier-list> ";"

<storage-type> ::= "const"
				| "auto"
				| "static"
				| "volatile"
				| "extern"
<type> ::= "void" 
		| "char" 
		| "short" 
		| "int" 
		| "unsigned" 
		| "signed"
		| "long" 
		| "float" 
		| "double"
		| <struct-union-enum-type>

<identifier-list> ::= <identifier> [{ "," <identifier> }]

<struct-union-def> ::= ( "struct" | "union" ) <identifier> "{" 
						[{var-def}] "}" ";"
<enum-def> ::= "enum" <identifier> "{" [{ <identifier> "," }] "}" ";"

<func-def> ::= [<func-type>] <type> [{"*"}] <identifier> 
				"(" "void" | <arg-list> ")" ( ";" | <complex> )
<func-type> ::= "const" | "static"

<arg-list> ::= <arg> [{ "," <arg> }]
<arg> ::= <type> [{"*"}] <identifier>

<complex> ::= "{" [{ <var-def> | ( <expression> ";" ) 
			| <if-block> | <while-block> | <do-while-block> | <for-block> 
			| <jump> }] "}"

<jump> ::= ( "break" | "continue" | "return" <expression> ) ";"

<if-block> ::= "if" "(" <expression> ")" 
				<complex> | (<expression> ";")

<while-block> ::= "while" "(" <expression> ")" 
				<complex> | ( <expression> ";" )

<do-while-block> ::= "do" <complex> "while" "(" <expression> ")" ";"

<for-block> ::= "for" "(" <var-def> <expression> ";" <expression> ")" <complex>

<expression> ::= ["("] [ ( <unary-expr> | <literal> 
				| <identifier> | <funct-call> ) 
				[{ <binary-op> <expression> }] 
				| [ "?" <expression> ":" <expression> ]] [")"]

<unary-expr> ::= <unary-op> <expression>

<func-call> ::= <identifier> "(" (<identifier> | <literal>) [{ "," (<identifier> | <literal>) }] ")"

<unary-op> ::= "+"
			| "++"
			| "-"
			| "--"
			| "*"
			| "&"
			| "~"
			| "!"
			| "sizeof"

<binary-op> ::= "+" 
			|"+="
			| "-"
			| "-="
			| "*" 
			| "*="
			| "/" 
			| "/="
			| "%"
			| "%="
			| "="
			| "=="
			| "<"
			| "<=" 
			| ">"
			| ">="
			| "!="
			| ">>"
			| ">>="
			| "<<"
			| "<<="
			| "&" 
			| "&&"
			| "&="
			| "|"
			| "||"
			| "|="
			| "^"
			| "^="
			| ","
			| "."
			| "->"
